// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum GuitarType {
  Electric
  Acoustic
  Ukulele
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  name         String
  passwordHash String
  isAdmin      Boolean
  comments     Comment[]
  Order        Order[]
  File         File[]
}

model ShopItem {
  id            Int         @id @default(autoincrement())
  name          String
  description   String
  addedAt       DateTime    @default(now())
  photo         File?
  type          GuitarType
  code          String
  stringsNumber Int
  rating        Float       @default(0)
  price         Float
  commentsMock      Comment[]
  orderItems    OrderListItem[]
}

model Comment {
  id            Int       @id @default(autoincrement())
  author        User      @relation(fields: [userId], references: [id])
  advantages    String
  disadvantages String
  text          String
  rating        Int
  createdAt     DateTime  @default(now())
  userId        Int
  shopItem      ShopItem? @relation(fields: [shopItemId], references: [id])
  shopItemId    Int?
}

model OrderListItem {
  id         Int       @id @default(autoincrement())
  shopItem   ShopItem? @relation(fields: [shopItemId], references: [id])
  shopItemId Int?
  quantity   Int
  price      Float
  sum        Float
  Order      Order?    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId    Int?
}

model Order {
  id            Int         @id @default(autoincrement())
  userId        Int
  User          User        @relation(fields: [userId], references: [id])
  orderItems    OrderListItem[]
  totalPrice    Float       @default(0)
  totalQuantity Int         @default(0)
  createdAt     DateTime    @default(now())
}

model File {
  id         Int      @id @default(autoincrement())
  shopItemId Int      @unique
  filename   String
  userId     Int
  User       User     @relation(fields: [userId], references: [id])
  shopItem   ShopItem @relation(fields: [shopItemId], references: [id], onDelete: Cascade)
}
